<div class="container signup" style="width:40%">
        <h4 class="display-4"style="font-size:40px;margin-bottom:50px;">
            <i class="far fa-user-circle"></i>  Create an account</h4>
       {{#if hasErrors}}
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                {{# each messages}}
                        {{this}}<br/>
                {{/each}}
            </div>
        {{/if}}
        <form action="/user/signup" method="post">
             <div class="row">
                <div class="col-6 mb-4">
                    <div class="form-group">
                        <input type="text" placeholder="Firstname" class="form-control" name="firstname" id="firstName" placeholder="" value="" required>
                        <div class="invalid-feedback"></div>
                    </div>
                </div>
                <div class="col-6 mb-4">
                    <div class="form-group">
                        <input type="text" placeholder="Lastname" class="form-control" name="lastname" id="lastname" placeholder="" value="" required>
                        <div class="invalid-feedback"></div>
                    </div>
                </div>
                <div class="col-6 mb-4">
                    <div class="form-group">
                        <input type="email" placeholder="Email" class="form-control" name="email" id="email" placeholder="" value="" required>
                        <div class="invalid-feedback"></div>
                    </div>
                </div>
                <div class="col-6 mb-4">
                    <div class="form-group">
                        <input type="password" placeholder="********" class="form-control" name="password" id="password" placeholder="" value="" required>
                        <div class="invalid-feedback"></div>
                    </div>
                </div>
            </div>
            <input type="hidden" name="_csrf" value="{{ csrfToken }}">
            <button type="submit" class="btn signbtn mt-3" id="signupbtn">Sign Up</button>      
        </form>
  
</div>

<script>
    //let inputs = document.getElementsByTagName('input')

    let errorList = []

    document.addEventListener('focusout', validateInput)
    let submitBtn = document.getElementById('signupbtn')

    function validateInput(e){
        if(e.target.classList.contains('form-control')){
            let input = e.target
            let errBlock = input.parentElement.children[1]
            inputId = input.getAttribute('id')
            switch (inputId){
                case ('firstName'):
                    checkInputValidity('firstname', input.value, 3, 20, errBlock)
                    break
                case ('lastname'):
                    checkInputValidity('lastname', input.value, 3, 20, errBlock)
                    break
                case ('password'):
                    checkInputValidity('lastname', input.value, 8, 20, errBlock)
                    break
                default:
                    break
            }
        }
    }

    function checkInputValidity(element='', value='', minlen=0, maxlen=0, errorBlockElement){
       
        if(value.length < minlen){
            let err = element+' cannot be less than '+minlen
            pushError(err, errorBlockElement)
            if(errorBlockElement.style.display == 'none' || errorBlockElement.style.display == '')
                errorBlockElement.style.display = 'block'
        }else{
            let err = element+' cannot be less than '+minlen
            removeError(err, errorBlockElement)

            if(errorBlockElement.style.display == 'block' && errorList.length < 1)
                errorBlockElement.style.display = 'none' 
        }
        
        if(value.length > maxlen){
            let err = element+' cannot be more than '+maxlen
            pushError(err, errorBlockElement)
            if(errorBlockElement.style.display == 'none' || errorBlockElement.style.display == '')
                errorBlockElement.style.display = 'block'
        }else{
            let err = element+' cannot be more than '+maxlen
            removeError(err, errorBlockElement)

            if(errorBlockElement.style.display == 'block' && errorList.length < 1)
                errorBlockElement.style.display = 'none' 
        }
        
    }

    function pushError(errMsg='', errBlock){
        let errtxt = document.createElement('p')
        errtxt.textContent = errMsg
        if(!errorList.includes(errMsg)){
            errorList.push(errMsg)
        }
        //check err block child does not contain the content
        let isContainErrorMsg = false
        Array.from(errBlock.children).forEach(element => {
            isContainErrorMsg = element.textContent == errMsg
        })
        
        !isContainErrorMsg && errBlock.append(errtxt)
    }

    function removeError(errMsg='', errBlock){
        if(errorList.includes(errMsg)){
            let errIdx = errorList.indexOf(errMsg)
            errorList.splice(errIdx, 1)
        }
        let isContainErrorMsg = true
        Array.from(errBlock.children).forEach(element => {
            isContainErrorMsg = element.textContent == errMsg
            isContainErrorMsg && errBlock.removeChild(element)
        })
    }

    function checkError(){
        if(submitBtn){
            if(errorList.length > 0){
                submitBtn.disabled = true
            }else{
                if(submitBtn.disabled)
                    submitBtn.disabled = false
            }
        }
    }

    let intervalId = setInterval(checkError, 1000);

    if(!submitBtn)
        clearInterval(intervalId)
</script>